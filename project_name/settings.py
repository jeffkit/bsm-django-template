"""
Django settings for {{project_name}} project.

Generated by 'django-admin startproject' using Django {{ docs_version }}.

For more information on this file, see
https://docs.djangoproject.com/en/{{ docs_version }}/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/
"""
import environ
import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/{{ docs_version }}/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&aa3o4o9&csikb0^+6=)9!vv1vzc3w^!&89=8xxf0&phfa3%i*'

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, True),
    ALI_YUN_OSS_KEY=(str, ''),
    ALI_YUN_OSS_SECRET=(str, ''),
    ALI_YUN_OSS_ENDPOINT=(str, ''),
    ALI_YUN_OSS_HOST=(str, ''),
    ALI_YUN_OSS_BUCKET=(str, ''),
    SUB_MODULES=(str, 'bsm-django'),
)

environ.Env.read_env()

DEBUG = env('DEBUG')

SUB_MODULES = env('SUB_MODULES').split(',')

for sm in SUB_MODULES:
    sys.path.append( os.path.join(BASE_DIR, sm))

# Application definition
# 内置的 App
BUILT_IN_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# 第三方的 App
THIRD_PARTY_APPS = [
    'django_extensions',
    'rest_framework',
    'rest_framework_swagger',
    'api_basebone',
]

# 项目中开发的 App
INTERNAL_APPS = [
    'member',
    'baseshop',
]

# Application definition
INSTALLED_APPS = BUILT_IN_APPS + THIRD_PARTY_APPS + INTERNAL_APPS

ALLOWED_HOSTS = ['*']

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.http.ConditionalGetMiddleware',
]

ROOT_URLCONF = '{{project_name}}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = '{{project_name}}.wsgi.application'


# Database
# https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/#databases

DATABASES = {
    'default': env.db('DEFAULT_DATABASE', 'sqlite:///db.sqlite3')
}


# Password validation
# https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/{{ docs_version }}/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/{{ docs_version }}/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

AUTH_USER_MODEL = 'member.User'


# 跨域设置
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'api_basebone.drf.handler.exception_handler',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'api_basebone.drf.authentication.CsrfExemptSessionAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
}


# 阿里云 OSS 配置
ALI_YUN_OSS_KEY = env('ALI_YUN_OSS_KEY')
ALI_YUN_OSS_SECRET = env('ALI_YUN_OSS_SECRET')
ALI_YUN_OSS_ENDPOINT = env('ALI_YUN_OSS_ENDPOINT')
ALI_YUN_OSS_HOST = env('ALI_YUN_OSS_HOST')
ALI_YUN_OSS_BUCKET = env('ALI_YUN_OSS_BUCKET')


# Django 扩展设置
SHELL_PLUS_PRINT_SQL = True


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[%(levelname)s] %(asctime)s %(filename)s %(lineno)d: %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.db': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.request': {
            'handlers': ['mail_admins', 'console'],
            'level': 'ERROR',
            'propagate': False,
        },
        'api_basebone': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'member': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        }
    }
}
